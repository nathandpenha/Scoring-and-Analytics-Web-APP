substr(colors, -2, 4)
substr(colors, 3, 4)
substr(colors, 4, 4)
substr(colors, 2, 4)
substr(colors, 2, 4)
substr(colors, -1,-2)
(9^9)^(9^9)
paste("I like", colors, collapse=" and ")
paste("I like", colors, sep =" and ")
paste("I like", colors, sep =" and ",collapse = "")
"a":""
"a":"z"
seq("a","z")
seq("a":"z")
paste(seq("a":"z"), "ell")
paste(seq('a':'z'), "ell")
getwd()
hist(1:10)
hist(1:3)
hist(seq(1,50,5)
)
hist(n<-c(12,15,13,20,14,16,10,10,8,15))
pie(n)
m<-n^2-10*n
plot(n,m)
sin(90)
sin(9)
sin(3)
sin(321E21)
curve(expr=sin, from=0, to=6*pi)
curve(sin, 0, 6*pi)
plot(n,m)
curve(sin, 0, 6*pi)
pie(c(18,30,32,10,10),c("A", "B","C","D","F"),c("red","white","yellow","blue","green"))
pie(c(18,30,32,10,10),c("A", "B","C","D","F"),c("red","white","yellow","blue","green"))
pie(c(18, 30, 32, 10, 10),c("A", "B", "C", "D", "F"),col=c("red", "white", "yellow", "blue", "green"))
pie(sample(1,100,5),c("one","two","three","four","five"),c("red","yello","green","blue","black")
)
pie(sample(1,100,5),c("one","two","three","four","five"),col=c("red","yello","green","blue","black"))
pie(sample(5,100,5),c("one","two","three","four","five"),col=c("red","yello","green","blue","black"))
pie(sample(5,100,5),c("one","two","three","four","five"),col=c("red","yellow","green","blue","black"))
sample(5,100,5)
sample(5,100)
pie(sample(5:100,5),c("one","two","three","four","five"),col=c("red","yellow","green","blue","black"))
D
library(EDAWR)
df
gather(df,"year","n",1:3)
library(dplyr`)
''
)
)
library(dplyr)
;
)
'
)
q()
student
student<-rbind(student,Max=apply(student,2,sum))
student
rownames(student[11])<-c("Max")
rownames(student)<-c(1:10,"Total")
student
student<-cbind(student,Total=apply(student,1,sum))
student
student<-cbind(student[-3],Total=apply(student,1,sum)/200)
student
student<-cbind(student,Total=apply(student,1,sum))
student<-cbind(student[-3],Percentage=apply(student,1,sum)/200*100)
student
student<-cbind(student,Result=ifelse(student$Percentage>40,"Pass",Fail)
)
student<-cbind(student,Result=ifelse(student$Percentage>40,"Pass","Fail"))
student
help(subset
)
help(subset)
runif(10)
runif(10)
runif(10)
help(subset)
help(subset)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
help(subset)
help(subset)
help(subset)
help(subset)
e[1:20]
e[1:20]<-1
e
e[1:20]<-1
e
5:1
1:5
paste(sample(letters,4),collapse="")
rep(paste(sample(letters,4),collapse=""),4)
sample(paste(sample(letters,4),collapse=""),4)
sample(paste(sample(letters,22),collapse=""),4)
sample(paste(sample(letters,2),collapse=""),4)
(sample(paste(letters,"adfgad",sep=""),20))
sample(paste(letters,"adfgad",sep=""))
paste(letters,"adfgad",sep="")
sample(letters,20)
paste(sample(letters,20),collapse='')
sample(paste(sample(letters,20),collapse=''))
sample(paste(sample(letters,20),collapse=''),10)
help(rep)
plot(x,y,ylim=c(0,6))
x<-1:10
plot(x,y,ylim=c(0,6))
y<-11:20
plot(x,y,ylim=c(0,6))
plot(x,y,ylim=c(0,6))
sunflowerplot(x,y)
sunflowerplot(x,y)
title(2.3,3.4,"arrow and segment")
text(2.3,3.4,"label goes here",cex=0.7,col="white")
text(2.3,3.4,"label goes here",cex=0.7,col="white")
data().Titanic
image(volcano)
contour(volcano)
dd<- edit(as.data.frame(NULL))
ddd
dd
D
D<-edit(as.data.frame(NULL))
D
d
D<-edit(as.data.frame(d))
D
m
m<-matrix(1:30,nrow=10,byrow = T)
m
summary(D)
summary(d)
summary(m)
write.csv(m,"demo2.csv")
read("demo2.csv")
read.csv("demo2.csv")
read.csv("demo2.csv",skip=1)
read.csv("demo2.csv",skip=1,sep=",")
unique.data.frame(m)
grep("n","nathan")
grep("n","snathan")
grep("n","sanathan")
grep("t","sanathan")
grep("nahan","n")
grep("nathan","n")
grep("n","sanathan")
help(grep)
grep("n","sanathan")
grep("p","sanathan")
strsplit("nathan dpenha"," ")
strsplit("nathan dpenha"," ")
for(i in 1:10){paste(i)}
for(i in 1:10){paste(i)}
for(i in 1:10){paste(i)}
for(i in 1:10){paste(i)}
for(i in 1:10){paste(i)}
for(i in 1:10){paste(i)
print(i)}
m
for(i in m){print(i)
}
m
newfuun()
newfun()
newfun()<-function{}
newfun()<-function{
print("hello")
}
newfun()<-function{
newfun<-function(){
print("hello")
}
newfun()
newfun<-function(){
print("hello");
}
newfun()
newfun<-function(){
print("hello");
return 1;
curve(expr = sin , from = 10, to=90)
pie(1:10)
pie(1:100)
pie(1:1000)
pie(1:10000)
pie(1:100000000000000000000000000000000)
hist(1:100)
pie(tan)
pie(sin)
pie(sin(10))
D[1:2,1]
m[1:2,1]
m[1:2,1:2]
prod(1,2,10321321,0.000000000000000000001)
barplot(1:10)
sunflowerplot(x,y)
abline(10,10)
text(2.3,3.4,"label goes here",cex=0.7)
title(2.3,10.4,"arrow and segment")
library(dplyr)
pollution
library(EDAWR)
pollution
spread(pollution,size ,amount)
library(tidyr)
spread(pollution,size ,amount)
cases
gather(cases,"year","value")
gather(cases,"year","value",2)
m
D
d
student
seperate(student)
seperate(student,rate)
separate(student,rate)
separate(student)
separate(student,Result)
separate(student,Result,into=c("a","b"))
separate(student,Result,into=c("a","b"),sep=",")
separate(student,Result,into=c("a","b"),sep=22)
separate(student,Result,into=c("a","b"),sep=2)
unite(student,Total,marks1)
unite(student,"new",Total,marks1)
unite(student,"new",Total,marks1,sep=",")
curve((x)^3,-3,3,col=8,lwd=5,lty=5)
barplot(1:1000)
sunflowerplot(1:10)
hist()
hist(10)
history()
rep(sample(letters,4),10)
rep(paste(sample(letters,4),collapse=""),10)
rep(paste(sample(letters,4),collapse=""),10)
m=matrix(seq(1,100),byrow = T, nrow = 10)
m
m%2==0
(m%2==0)
(m==0)
(m>0)
(m>10)
((m%2)=0)
((m%2)==0)
for(1 in 1:10){print(i)}
for(i in 1:10){print(i)}
while(1){print(1)}
install.packages("RMySQL")
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
for( i in  1:100){print(i)}
read.csv("data2.txt")
read.csv("data2.txt")
D<-data.frame(read.csv("data2.txt"))
D
x<-seq(1,10)
y<-seq(31,40)
lm(x+y)
lm(x~y)
lm(x~y)
abline(lm(x~y))
plot.new
plot.new()
abline(lm(x~y))
plot.new(abline(lm(x~y)))
cars<-data.frame(x,y)
cars
lm(x~y,data=cars)
lm(cars$x~cars$y,data=cars)
l<-lm(cars$x~cars$y,data=cars)
l
help(lm)
l
summary(l)
ToothGrowth
attach(ToothGrowth)
plot(ToothGrowth$dose,ToothGrowth$len)
abline(lm(ToothGrowth$dose,ToothGrowth$len))
abline(lm(ToothGrowth$dose~ToothGrowth$len))
lin<-lm(ToothGrowth$dose~ToothGrowth$len)
summary(lin)
abline(lin)
abline(lin$residuals)
sample.wage
t.test(ToothGrowth,alternative="less",mu=9)
t.test(ToothGrowth$len,alternative="less",mu=9)
t.test(ToothGrowth$len,alternative="greater",mu=9)
t.test(ToothGrowth$len,alternative="greater",mu=9)
predict(l)
predict(lin)
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
# Create a sequence of numbers between -10 and 10 incrementing by 0.1.
x <- seq(-10, 10, by = .1)
# Choose the mean as 2.5 and standard deviation as 0.5.
y <- dnorm(x, mean = 2.5, sd = 0.5)
plot(x,y)
x
y
x <- seq(-10, 10, by = .1)
x
y <- dnorm(x)
y
x <- seq(-10, 10, by = .1)
# Create a sample of 50 numbers which are incremented by 1.
x <- seq(0,50,by = 1)
# Create the binomial distribution.
y <- dbinom(x,50,0.5)
plot(x,y)
teethdata=chisq.test(ToothGrowth)
dat<-data.frame(ToothGrowth$len,ToothGrowth$dose)
chisq.test(dat)
history()
m
m<-c(1:9,nrow=3,byrow=T)
m
m<-c(1:9,byrow=T)
m
m<-matrix(1:9,byrow=T,nrow=3)
m
solve(m)
inverse(m)
inv(m)
Inverse(m)
library(matlib)
install.packages("matlib")
library(matlib)
transpose(m)
t(m)
lin<-lm(ToothGrowth$dose~ToothGrowth$len)
a<-data.frame(x=10)
predict(a)
predict(y~x,a)
m
matrix.inverse(m)
inv(m)
# Create a sample of 50 numbers which are incremented by 1.
x <- seq(0,50,by = 1)
# Create the binomial distribution.
y <- dbinom(x,50,0.5)
# Give the chart file a name.
png(file = "dbinom.png")
# Plot the graph for this sample.
plot(x,y)
plot(x,y)
plot(x,y)
y
plot(x,y)
car.data <- data.frame(Cars93$AirBags, Cars93$Type)
# Create a table with the needed variables.
car.data = table(Cars93$AirBags, Cars93$Type)
print(car.data)
# Perform the Chi-Square test.
print(chisq.test(car.data))
D
q()
install.packages("rJava")
install.packages("shiny")
library(shiny)
runExample("01_hello")
library(ggplot2)
data("women")
data(women)
colnames(women)
head(women)
qplot(height,weight,data=women)
qplot(height,weight,data=women,geom = c("point","line"))
qplot(height,weight,data=women,geom = c("point","line"),color="red")
qplot(height,weight,data=women,geom = c("point","line"),color=heigh)
qplot(height,weight,data=women,geom = c("point","line"),color=height)
qplot(height,weight,data=women,geom = c("point","line"),color=height)
qplot(height,weight,data=women,geom = c("point","line"),color=height,size=weight
)
qplot(height,weight,data=women,geom = c("point","line"),color=height,size=weight)
data("iris")
iris
head(iris)
gplot(sepal.length)
gplot(sepal.length,sepal.lengthh)
gplot(sepal.length,sepal.length)
gplot(sepal.length,data=iris,geom='',fill=Species)
qplot(sepal.length,data=iris,geom='',fill=Species)
qplot(sepal.length,data=iris,fill=Species)
data("Orange")
colnames(Orange)
colnames(Orange)
qplot(age,circumferene,data=Orange,geoom=c("point","line"),color=True)
qplot(age,circumferene,data=Orange,geoom=c("point","line"),color=Tree)
qplot(age,circumference,data=Orange,geoom=c("point","line"),color=Tree)
help("Orange")
pdf("filename.ppdf")
pdf("filename.pdf")
qplot(age,circumference,data=Orange)
dev.off()
library(plumber)
setwd("I:/GitHub/Scoring-and-Analytics-Web-APP/")
r <- plumb("myfile.R")
r$run(port=8000)
r$run(port=9191)
r <- plumb("myfile.R")
r <- plumb("myfile.R")
r$run(port=9191)
getwd()
D<-read.csv("Data/Names.csv")
D
D<-read.csv("Data/Names.csv",skip = 1)
D
D<-read.csv("Data/Names.csv")
D$Names
r <- plumb("myfile.R")
r$run(port=9191)
r <- plumb("myfile.R")
r$run(port=9191)
r <- plumb("myfile.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
hist(100)
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
plot(10,20)
plot(10,0)
plot(10,40)
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
D<-read.csv("data/ViratKohli_T20I_Batting.csv")
D
hist(D$SR,D$Ground)
plot(D$SR,D$Ground)
plot(D$Ground,D$SR)
pie(D$Ground,D$SR)
pie(D$SR,D$Ground)
r <- plumb("functions.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
D<-read.csv(paste("data/",name,"_",format,"_Batting.csv"))
plot(D$Ground,D$SR)
D<-read.csv(paste("data//",name,"_",format,"_Batting.csv"))
plot(D$Ground,D$SR)
D<-read.csv(paste("data",name,"_",format,"_Batting.csv"))
plot(D$Ground,D$SR)
D<-read.csv(paste("data",name,"_",format,"_Batting.csv"))
paste("data",name,"_",format,"_Batting.csv")
paste("data",name,format,"_Batting.csv")
paste("data",name,format,"Batting.csv")
paste("data","Batting.csv")
name="tom"
format="t201"
paste("data/",name,"_",format,"_Batting.csv")
paste("data/",name,"_",format,"_Batting.csv",sep="")
r <- plumb("functions.R")
r$run(port=9191)
paste("data/",name,"_",format,"_Batting.csv",sep = ",")
paste("data/",name,"_",format,"_Batting.csv",sep = "")
r <- plumb("functions.R")
r$run(port=9191)
read.csv("'data/ViratKholi_T20I_Batting.csv'")
read.csv("data/ViratKholi_T20I_Batting.csv")
read.csv("data/ViratKohli_ODI_Batting.csv")
r <- plumb("functions.R")
r$run(port=9191)
r <- plumb("functions.R")
r$run(port=9191)
